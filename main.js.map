{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/services/pages.service.ts","webpack:///./src/app/page-card/page-card.component.css","webpack:///./src/app/page-card/page-card.component.html","webpack:///./src/app/page-card/page-card.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<input type=\\\"text\\\" id=\\\"input\\\" class=\\\"queryInput\\\" placeholder=\\\"enter search terms...\\\">\\n<div class=\\\"horizontalLine\\\"></div>\\n<div style=\\\"margin: 10px\\\" *ngIf=\\\"pageList | async as pageList; \\\">\\n    <app-page-card *ngFor=\\\"let page of pageList\\\" [page]=\\\"page\\\"></app-page-card>\\n</div>\\n<ng-template #loadGif>\\n    ...loading\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable, Observer, fromEvent, of } from 'rxjs';\nimport { PagesService, IPage, IPageResponce } from './common/services/pages.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  public pageList: Observable<IPage[]>;\n\n  public constructor(private _pagesService: PagesService) {\n  }\n\n  public initPageListByTearm(searchTerms: string) {\n    const pageSequence$: Observable<IPageResponce> = this._pagesService.getPages(searchTerms);\n    pageSequence$.subscribe((responce) => {\n       this.pageList = of (responce.items);\n    } );\n  }\n\n  public ngOnInit(): void {\n    const input = document.querySelector('#input');\n    const sequence$ = fromEvent(input, 'input');\n    let timer;\n\n    sequence$.subscribe((event: KeyboardEvent) => {\n      const searchTerms = (<HTMLInputElement>event.target).value;\n\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        this.initPageListByTearm(searchTerms);\n      }, 500);\n    });\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PagesService } from './common/services/pages.service';\nimport { PageCardComponent } from './page-card/page-card.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    PagesService,\n    {provide: 'pageServiceUrl', useValue: environment}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n\nexport interface IPage {\n  'title': string;\n  'htmlTitle': string;\n  'link': string;\n  'displayLink': string;\n  'snippet': string;\n  'htmlSnippet': string;\n}\n\nexport interface IPageResponce {\n  items: IPage[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesService {\n  public constructor(private _http: HttpClient, @Inject('pageServiceUrl') private _pageServiceUrl: {pageServiceUrl: string}) {\n  }\n\n  public getPages(searchTerms: string): Observable<IPageResponce> {\n    const response: Observable<IPageResponce> =\n      this._http.get<IPageResponce>(`${this._pageServiceUrl.pageServiceUrl}${searchTerms}`); return response;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"pageCardPanel\\\">\\n  <div><p class=\\\"pageTitle\\\">{{page.title}}</p></div>\\n  <a [href]='page.link' target=\\\"_blank\\\">{{page.displayLink}}</a>\\n  <div>{{page.snippet}}</div>\\n</div>\\n\"","import { Component, Input} from '@angular/core';\nimport { IPage } from '../common/services/pages.service';\n\n@Component({\n  selector: 'app-page-card',\n  templateUrl: './page-card.component.html',\n  styleUrls: ['./page-card.component.css']\n})\nexport class PageCardComponent {\n  @Input()\n  public page: IPage;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // tslint:disable-next-line:max-line-length\n  pageServiceUrl: 'https://www.googleapis.com/customsearch/v1?key=AIzaSyDnNVy_7K-zneTAqM_oBMmSfxay3qv_4jw&cx=012656169419254088464:yfaussjhw64&q='\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}